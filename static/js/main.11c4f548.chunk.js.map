{"version":3,"sources":["comfirmAdded/confirmAdded.js","AddComponent/AddComponent.js","Spinner/spinner.js","HomeComponent/HomeComponent.js","FooterComponent/FooterComponent.js","App.js","serviceWorker.js","index.js"],"names":["ConfirmAdded","props","added","className","Alert","variant","AddComponent","onChangeName","bind","onChangeMeaning","onhandleSubmit","state","name","meaning","alreadyAdded","e","this","setState","target","value","preventDefault","console","log","dictionary","axios","post","then","res","data","catch","err","to","Container","fluid","Row","Col","md","span","offset","Form","Group","Label","title","Control","required","type","placeholder","onChange","class","Button","size","onClick","Component","MySpinner","usePromiseTracker","promiseInProgress","color","height","width","HomeComponent","url","trackPromise","fetch","method","headers","credentials","response","json","mean","map","d","error","message","onSubmit","sm","Card","bg","text","style","marginTop","Body","Title","Text","FooterComponent","App","ReactGA","initialize","pageview","window","location","pathname","search","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.11c4f548.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport \"./confirmAdded.css\";\r\nexport const ConfirmAdded = props => {\r\n  var added = props.added;\r\n  if (added === 1) {\r\n    return (\r\n      <div className=\"added\">\r\n        <Alert variant=\"warning\">Defiition already Added!</Alert>\r\n      </div>\r\n    );\r\n  } else if (added === 2) {\r\n    return (\r\n      <div className=\"added\">\r\n        <Alert variant=\"success\">\r\n          Thanks! You can add more definition if you wish.\r\n        </Alert>\r\n      </div>\r\n    );\r\n  } else if (added === 3) {\r\n    return (\r\n      <div className=\"added\">\r\n        <Alert variant=\"danger\">Please fill in all required fields.</Alert>\r\n      </div>\r\n    );\r\n  } else if (added === 4) {\r\n    return (\r\n      <div className=\"added\">\r\n        <Alert variant=\"secondary\">Please connect to the internet.</Alert>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"added\"></div>;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./AddComponent.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Modal\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { ConfirmAdded } from \"../comfirmAdded/confirmAdded\";\r\n\r\nclass AddComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeMeaning = this.onChangeMeaning.bind(this);\r\n    this.onhandleSubmit = this.onhandleSubmit.bind(this);\r\n    this.state = {\r\n      name: \"\",\r\n      meaning: \"\",\r\n      alreadyAdded: 0\r\n    };\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeMeaning(e) {\r\n    this.setState({\r\n      meaning: e.target.value\r\n    });\r\n  }\r\n\r\n  onhandleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.name);\r\n    console.log(this.state.meaning);\r\n    const dictionary = {\r\n      name: this.state.name,\r\n      meaning: this.state.meaning\r\n    };\r\n\r\n    if (this.state.name != \"\" && this.state.meaning != \"\") {\r\n      axios\r\n        .post(`http://3.7.65.178/dictionary/add`, dictionary)\r\n        .then(res => {\r\n          console.log(res.data);\r\n          if (res.data === \"Same name found!!\") {\r\n            this.setState({\r\n              alreadyAdded: 1\r\n            });\r\n            console.log(this.state.alreadyAdded);\r\n          } else {\r\n            this.setState({\r\n              alreadyAdded: 2\r\n            });\r\n            console.log(this.state.alreadyAdded);\r\n          }\r\n          console.log(res.data);\r\n          this.setState({\r\n            name: \"\",\r\n            meaning: \"\"\r\n          });\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Error is \" + err);\r\n          this.setState({\r\n            alreadyAdded: 4\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        alreadyAdded: 3\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"addheading\">\r\n          <Link to=\"/\">\r\n            <h1>Online Boro Dictionary App</h1>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Container fluid=\"md\">\r\n            <Row>\r\n              <Col md={{ span: 8, offset: 2 }}>\r\n                <Alert variant=\"warning\">\r\n                  Please do not add unnecessary definition for the word.\r\n                </Alert>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label>Word </Form.Label>\r\n                    <sup className=\"required\" title=\"Required\">\r\n                      {\" \"}\r\n                      *\r\n                    </sup>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter word\"\r\n                      value={this.state.name}\r\n                      onChange={this.onChangeName}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label>Definition</Form.Label>\r\n                    <sup class=\"required\" title=\"Required\">\r\n                      {\" \"}\r\n                      *\r\n                    </sup>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter definition\"\r\n                      value={this.state.meaning}\r\n                      onChange={this.onChangeMeaning}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    className=\"addButton\"\r\n                    onClick={this.onhandleSubmit}\r\n                  >\r\n                    Add to a database\r\n                  </Button>{\" \"}\r\n                </Form>\r\n                <ConfirmAdded added={this.state.alreadyAdded} />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddComponent;\r\n","import React from \"react\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from \"react-loader-spinner\";\r\nexport const MySpinner = props => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  return (\r\n    promiseInProgress && (\r\n      <div className=\"spinner\">\r\n        <Loader type=\"ThreeDots\" color=\"#007bff\" height={10} width={80} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./HomeComponent.css\";\r\nimport { Container, Row, Col, Form, Button, Card } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { MySpinner } from \"../Spinner/spinner\";\r\nclass HomeComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onhandleSubmit = this.onhandleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      meaning: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onhandleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.name);\r\n    this.setState({ meaning: \"\" });\r\n    if (this.state.name != \"\") {\r\n      let url = \"http://3.7.65.178/dictionary/search/\" + this.state.name;\r\n      trackPromise(\r\n        // fetch(url, {\r\n        //   headers: {\r\n        //     Accept: \"application/json\",\r\n        //     \"Content-Type\": \"application/json\"\r\n        //   }\r\n        // })\r\n        //   .then(res => {\r\n        //     if (res.data != \"No data found\") {\r\n        //       var mean = res.data.map(d => d.meaning);\r\n        //       this.setState({ meaning: mean });\r\n        //       console.log(this.state.meaning);\r\n        //     } else {\r\n        //       this.setState({\r\n        //         meaning: \"Sorry, Definition not yet added. Please add below!\"\r\n        //       });\r\n        //       console.log(this.state.meaning);\r\n        //     }\r\n        //   })\r\n        //   .catch(err => {\r\n        //     console.log(\"Error is here\" + err);\r\n        //     this.setState({\r\n        //       meaning: \"Connect to the internet.\"\r\n        //     });\r\n        //   })\r\n        fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials: \"same-origin\"\r\n        }).then(\r\n          response => {\r\n            response\r\n              .json()\r\n              .then(res => {\r\n                var mean = res.map(d => d.meaning);\r\n                console.log(mean);\r\n                this.setState({ meaning: mean });\r\n              })\r\n              .catch(err => {\r\n                this.setState({\r\n                  meaning: \"Sorry, Definition not yet added. Please add below!\"\r\n                });\r\n                console.log(this.state.meaning);\r\n                console.log(err);\r\n              });\r\n          },\r\n          function(error) {\r\n            return error.message; //=> String\r\n          }\r\n        )\r\n        // axios\r\n        //   .get(\"/dictionary/search/\" + this.state.name, {\r\n        //     headers: {\r\n        //       Accept: \"application/json\",\r\n        //       \"Content-Type\": \"application/json\"\r\n        //     }\r\n        //   })\r\n        //   .then(res => {\r\n        //     if (res.data != \"No data found\") {\r\n        //       var mean = res.data.map(d => d.meaning);\r\n        //       this.setState({ meaning: mean });\r\n        //       console.log(this.state.meaning);\r\n        //     } else {\r\n        //       this.setState({\r\n        //         meaning: \"Sorry, Definition not yet added. Please add below!\"\r\n        //       });\r\n        //       console.log(this.state.meaning);\r\n        //     }\r\n        //   })\r\n        //   .catch(err => {\r\n        //     console.log(\"Error is here\" + err);\r\n        //     this.setState({\r\n        //       meaning: \"Connect to the internet.\"\r\n        //     });\r\n        //   })\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"heading\">\r\n          <Container>\r\n            <h1>Online Boro Dictionary App</h1>\r\n            <br />\r\n            <Form onSubmit={this.onhandleSubmit}>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <Form.Group>\r\n                    <Form.Control\r\n                      size=\"lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Search for definition\"\r\n                      value={this.state.name}\r\n                      onChange={this.onChangeName}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    onClick={this.onhandleSubmit}\r\n                  >\r\n                    Search Meaning\r\n                  </Button>{\" \"}\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n        <div className=\"meaning\">\r\n          <Container>\r\n            <Row>\r\n              <Col sm={8}>\r\n                <h4>Definition:</h4>\r\n                {/* SHOW DEFINITION */}\r\n                <div className=\"definition\">\r\n                  <MySpinner />\r\n                  <h5> {this.state.meaning}</h5>\r\n                </div>\r\n              </Col>\r\n\r\n              <Col sm={4}>\r\n                <Card\r\n                  bg=\"light\"\r\n                  text=\"dark\"\r\n                  style={{ width: \"18rem\", marginTop: \"30px\" }}\r\n                >\r\n                  <Card.Body>\r\n                    <Card.Title>Add definition here!</Card.Title>\r\n                    <Card.Text>\r\n                      There are some words that are not yet added in our\r\n                      database. You can help us by adding the words in our\r\n                      database. It will be very grateful of you.\r\n                    </Card.Text>\r\n                    <Link to=\"/add\">\r\n                      {\" \"}\r\n                      <Button variant=\"link\">Click here!</Button>\r\n                    </Link>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeComponent;\r\n","import React, { Component } from \"react\";\r\nimport \"./FooterComponent.css\";\r\nexport default class FooterComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <p>\r\n          <h6>version 1.0.0</h6>\r\n          Copyright © 2020 Digambar Brahma.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport AddComponent from \"./AddComponent/AddComponent\";\nimport HomeComponent from \"./HomeComponent/HomeComponent\";\nimport FooterComponent from \"./FooterComponent/FooterComponent\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\n\nfunction initializeGA() {\n  ReactGA.initialize(\"UA-162109811-1\");\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nfunction App() {\n  initializeGA();\n  return (\n    <Router>\n      <Route path=\"/\" exact component={HomeComponent} />\n      <Route path=\"/add\" component={AddComponent} />\n      <FooterComponent />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}